% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/internals.R
\name{DDIwR_internal}
\alias{DDIwR_internal}
\alias{dfm}
\alias{appendInfo}
\alias{checkArgument}
\alias{checkDots}
\alias{checkElement}
\alias{checkExisting}
\alias{checkvarFormat}
\alias{checkType}
\alias{checkXMList}
\alias{cleanup}
\alias{collectMetadata}
\alias{datanotes}
\alias{formatExample}
\alias{generateID}
\alias{getDateTime}
\alias{getDelimiter}
\alias{getDNS}
\alias{getEnter}
\alias{getFiles}
\alias{getFormat}
\alias{getValues}
\alias{getVariables}
\alias{getXML}
\alias{hasLabels}
\alias{hasMissingLabels}
\alias{makeLabelled}
\alias{missingValuesSPSS}
\alias{prespace}
\alias{removeXMLang}
\alias{repeatSpace}
\alias{replaceChars}
\alias{replaceTicks}
\alias{splitrows}
\alias{treatPath}
\alias{writeMetadata}
\alias{XMLvariables}
\alias{writeRlist}
\title{DDIwR internal functions}
\usage{
appendInfo(codeBook, data)

checkArgument(argument, default, ...)

checkDots(dotsvalue, default)

checkElement(x)

checkExisting(xpath, inside, attribute = NULL)

checkvarFormat(codeBook)

checkType(x, labels = NULL, na_values = NULL, na_range = NULL)

checkXMList(xmlist)

cleanup(x, cdata = TRUE)

collectMetadata(dataset, ...)

datanotes(data)

formatExample(xml_node, level = 0, indent = 2)

generateID(x, nchars = 16)

getDateTime()

getDelimiter(x)

getDNS(xml)

getEnter(OS)

getFiles(path = ".", type = "*", currdir)

getFormat(x, type = c("SPSS", "Stata"), ...)

getValues(variable)

getVariables(codeBook, name = TRUE)

getXML(path)

hasLabels(x)

hasMissingLabels(variables)

makeLabelled(x, variables, declared = TRUE)

missingValuesSPSS(variables, range = FALSE, numvars = TRUE)

prespace(text, indent = NULL)

removeXMLang(x)

repeatSpace(times, indent)

replaceChars(x)

replaceTicks(x)

splitrows(x, enter, y = 80, spacerep = "")

treatPath(path, type = "*", single = FALSE, check = TRUE)

writeMetadata(variables, OS = "", indent = 4)

XMLvariables(xml)

writeRlist(variables, OS = "windows", indent = 4, dirpath = "", filename = "")
}
\arguments{
\item{x}{Number of ID values to return}

\item{nchars}{Number of characters for each ID}
}
\value{
\code{checkElement}: Boolean.

\code{checkExisting}: Boolean.

\code{checkvarFormat}: A potentially modified \code{codeBook} element.

\code{checkType}: A character scalar

\code{cleanup}: A character vector

\code{collectMetadata}: A list containing variable level metadata information

\code{datanotes}: A "notes" element to be added in the \code{fileDscr} element

\code{generateID}: Character vector

\code{getDateTime}: Character vector

\code{getDelimiter}: Character scalar

\code{getDNS}: Character scalar

\code{getEnter}: Character scalar

\code{getFiles}: A list with four components: the complete path, the files, the file names and the file extensions

\code{getFormat}: Character scalar

\code{getValues}: A list with two components: \code{labels} and \code{na_values}

\code{getVariables}: A list with "var" elements, renamed with the names of the variables

\code{getXML}: An XML document

\code{hasLabels}: Boolean

\code{hasMissingLabels}: Boolean vector

\code{makeLabelled}: A modified data frame.

\code{missingValuesSPSS}: A vector of missing values representation.

\code{prespace}: A modified text.

\code{removeXMLang}: A modified \code{codeBook} element.

\code{repeatSpace}: Character spaces

\code{replaceChars}: Character vector

\code{replaceTicks}: A recoded string.

\code{splitrows}: A character vector.

\code{treatPath}: A list with four components: the complete path, the
files, the file names and the file extensions

\code{XMLvariables}: An R list
}
\description{
Functions to be used internally, only by developers and
contributors.

\code{appendInfo}: Append information at variable level about
labels: \code{na_values}, \code{na_range}, \code{measurement}, \code{type}
etc. (taken from the XML file)

\code{checkArgument}: Check function arguments

\code{checkDots}: Check the three dots ... argument.
If the argument is not supplied via dots, returns a default

\code{checkElement}: Check if an element is a DDI Codebook element

\code{checkExisting}: Check if a certain (sub)element exists in a DDI Codebook.

\code{checkvarFormat}: Makes sure all \code{var} elements have a single
(usually SPSS) value for the \code{varFormat} sub-element (if existing).

\code{checkType}: Determine the variable type: categorical, numerical or mixed

\code{checkXMList}: Determine if an XML list is a DDI Codebook

\code{cleanup}: Rectify texts read from a metadata object

\code{collectMetadata}: Collect metadata from a file or a dataframe object

\code{datanotes}: Prepare a notes element containing a
serialized and compressed R dataset

\code{formatExample}: Format an example from the DDI Codebook
specification

\code{generateID}: Generate simple, custom unique ID codes

\code{getDateTime}: Current date and time

\code{getDelimiter}: Guess the column delimiter from a text file

\code{getDNS}: Extracts the "D"efault "N"ame "Space" from an XML object

\code{getEnter}: Get the carriage return code from the current Operating System

\code{getFiles}: Get information about the files in a given directory

\code{getFormat}: Determine the SPSS / Stata variable format

\code{getValues}: Extract values, labels and missing values from a \code{var} element

\code{getVariables}: Extract the "var" elements from a \code{dataDscr} element
By default, the children "var" elements are renamed with the variables names.
This can be deactivated through the argument "name".

\code{getXML}: Read the DDI XML file, after testing if it can be loaded at all.

\code{hasLabels}: Check if a dataset has (declared) labels

\code{hasMissingLabels}: Check if variables have missing labels

\code{makeLabelled}: Coerce variables to labelled objects

\code{missingValuesSPSS}: Prepares the missing values for the SPSS export syntax.

\code{prespace}: Prepend a text with a certain number of space characters.

\code{removeXMLang}: Remove the \code{xmlang} attribute from all elements.

\code{repeatSpace}: Allows indentation of XML or HTML files

\code{replaceChars}: Replace certain characters, in preparation for XML export

\code{replaceTicks}: Recode all tick characters with a single quote.

\code{splitrows}: Split the written rows in the setup file.

\code{treatPath}: Determine which specific type of files are
present in a certain directory.

\code{writeMetadata}: Utility function to write the metadata
part in the setup file.

\code{XMLvariables}: Extract variable information from an XML Codebook

\code{writeRlist}: Write an .R file containing a metadata specific list.
}
\keyword{internal}
